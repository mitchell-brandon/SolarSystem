{"ast":null,"code":"import\"../css/graph.css\";import Planets from\"./Planets\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Graph(props){var radioValue=props.radioValue;var planets=props.planets;function rangeCounter(){var rangeArguments='';// RANGECOUNTER IS BEING INVOKED HERE, FUNCTION LIVES IN GRANDPARENT GRAPHINGCOMPONENTS.JS\n// IT TAKES A NESTED AS AN ARGUMENTS\n//YOU CAN HAVE AS MANY NESTED ARRAYS AS YOU NEED.\n// THIS IS THE FORMULAR [LOWEST-VALUE, HIGHEST-VALUE, SKIP COUNT INTERVAL]\nif(radioValue==='temperatures'){rangeArguments=props.rangeCounter([[4000,6000,500],[-100,500,100],[-300,-50,50]]);}else if(radioValue==='days'){rangeArguments=props.rangeCounter([[4500,6000,500],[300,1000,100],[0,25,5]]);}else if(radioValue==='years'){rangeArguments=props.rangeCounter([[0,60000,10000],[3000,5000,1000],[0,700,100]]);}else{console.log('there aint nothing here');}return rangeArguments;}return/*#__PURE__*/_jsx(\"div\",{className:\"graph-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"graph-wrapper\",children:[/*#__PURE__*/_jsxs(\"ul\",{className:\"data-list\",children:[// THIS LOGIC PRODUCES THE Y LABEL VERTICAL BAR.\n// IT TURNS THE STRING VALUE 'data-division' INTO\n// A JSX ELEMENT\nrangeCounter().map(function(value){return value==='data-division'?value=/*#__PURE__*/_jsx(\"div\",{className:\"horizontal-bar\",children:\" \"}):/*#__PURE__*/_jsx(\"li\",{className:\"graph-y-labels\",children:value.toLocaleString()},value);}),/*#__PURE__*/_jsx(Planets,{radioValue:radioValue,planets:planets})]}),/*#__PURE__*/_jsx(\"div\",{className:\"vertical-bar\"})]})});}export default Graph;","map":{"version":3,"sources":["/Users/mitchellbrandon/Desktop/solar-system-react/src/components/Graph.js"],"names":["Planets","Graph","props","radioValue","planets","rangeCounter","rangeArguments","console","log","map","value","toLocaleString"],"mappings":"AAAA,MAAO,kBAAP,CACA,MAAOA,CAAAA,OAAP,KAAoB,WAApB,C,wFAEA,QAASC,CAAAA,KAAT,CAAgBC,KAAhB,CAAuB,CACnB,GAAMC,CAAAA,UAAU,CAAGD,KAAK,CAACC,UAAzB,CACA,GAAMC,CAAAA,OAAO,CAAGF,KAAK,CAACE,OAAtB,CAEA,QAASC,CAAAA,YAAT,EAAuB,CACnB,GAAIC,CAAAA,cAAc,CAAG,EAArB,CAEA;AACA;AACA;AACA;AACA,GAAGH,UAAU,GAAK,cAAlB,CAAkC,CAC9BG,cAAc,CAAGJ,KAAK,CAACG,YAAN,CAAmB,CAAC,CAAC,IAAD,CAAO,IAAP,CAAa,GAAb,CAAD,CAAoB,CAAC,CAAC,GAAF,CAAO,GAAP,CAAY,GAAZ,CAApB,CAAsC,CAAC,CAAC,GAAF,CAAO,CAAC,EAAR,CAAY,EAAZ,CAAtC,CAAnB,CAAjB,CACH,CAFD,IAEO,IAAKF,UAAU,GAAK,MAApB,CAA4B,CAC/BG,cAAc,CAAGJ,KAAK,CAACG,YAAN,CAAmB,CAAC,CAAC,IAAD,CAAO,IAAP,CAAa,GAAb,CAAD,CAAoB,CAAC,GAAD,CAAM,IAAN,CAAY,GAAZ,CAApB,CAAsC,CAAC,CAAD,CAAI,EAAJ,CAAQ,CAAR,CAAtC,CAAnB,CAAjB,CACH,CAFM,IAEA,IAAIF,UAAU,GAAK,OAAnB,CAA2B,CAC9BG,cAAc,CAAGJ,KAAK,CAACG,YAAN,CAAmB,CAAC,CAAC,CAAD,CAAI,KAAJ,CAAW,KAAX,CAAD,CAAoB,CAAC,IAAD,CAAO,IAAP,CAAa,IAAb,CAApB,CAAwC,CAAC,CAAD,CAAI,GAAJ,CAAS,GAAT,CAAxC,CAAnB,CAAjB,CACH,CAFM,IAEA,CACHE,OAAO,CAACC,GAAR,CAAY,yBAAZ,EACH,CACD,MAAOF,CAAAA,cAAP,CACH,CAGD,mBACI,YAAK,SAAS,CAAC,iBAAf,uBACI,aAAK,SAAS,CAAC,eAAf,wBACI,YAAI,SAAS,CAAC,WAAd,WAEQ;AACA;AACA;AACAD,YAAY,GAAGI,GAAf,CAAoB,SAACC,KAAD,QAChBA,CAAAA,KAAK,GAAK,eAAV,CAEAA,KAAK,cAAG,YAAK,SAAS,CAAC,gBAAf,eAFR,cAIA,WAAgB,SAAS,CAAC,gBAA1B,UAA4CA,KAAK,CAACC,cAAN,EAA5C,EAASD,KAAT,CALgB,EAApB,CALR,cAaI,KAAC,OAAD,EAAS,UAAU,CAAEP,UAArB,CAAiC,OAAO,CAAEC,OAA1C,EAbJ,GADJ,cAgBI,YAAK,SAAS,CAAC,cAAf,EAhBJ,GADJ,EADJ,CAsBH,CAGD,cAAeH,CAAAA,KAAf","sourcesContent":["import \"../css/graph.css\";\nimport Planets from \"./Planets\";\n\nfunction Graph( props) {\n    const radioValue = props.radioValue\n    const planets = props.planets\n\n    function rangeCounter(){\n        let rangeArguments = ''\n\n        // RANGECOUNTER IS BEING INVOKED HERE, FUNCTION LIVES IN GRANDPARENT GRAPHINGCOMPONENTS.JS\n        // IT TAKES A NESTED AS AN ARGUMENTS\n        //YOU CAN HAVE AS MANY NESTED ARRAYS AS YOU NEED.\n        // THIS IS THE FORMULAR [LOWEST-VALUE, HIGHEST-VALUE, SKIP COUNT INTERVAL]\n        if(radioValue === 'temperatures') {\n            rangeArguments = props.rangeCounter([[4000, 6000, 500], [-100, 500, 100], [-300, -50, 50]])\n        } else if ( radioValue === 'days') {\n            rangeArguments = props.rangeCounter([[4500, 6000, 500], [300, 1000, 100], [0, 25, 5]])\n        } else if (radioValue === 'years'){\n            rangeArguments = props.rangeCounter([[0, 60000, 10000], [3000, 5000, 1000], [0, 700, 100]])\n        } else {\n            console.log('there aint nothing here')\n        }\n        return rangeArguments\n    }\n\n\n    return(\n        <div className=\"graph-container\">\n            <div className='graph-wrapper'>\n                <ul className='data-list'>\n                    {\n                        // THIS LOGIC PRODUCES THE Y LABEL VERTICAL BAR.\n                        // IT TURNS THE STRING VALUE 'data-division' INTO\n                        // A JSX ELEMENT\n                        rangeCounter().map( (value) => (\n                            value === 'data-division' \n                            ? \n                            value = <div className='horizontal-bar'> </div>\n                            :\n                            <li key={value} className='graph-y-labels'>{value.toLocaleString()}</li>\n                        ))\n                    }\n                    <Planets radioValue={radioValue} planets={planets}/>\n                </ul>\n                <div className=\"vertical-bar\"></div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default Graph;"]},"metadata":{},"sourceType":"module"}