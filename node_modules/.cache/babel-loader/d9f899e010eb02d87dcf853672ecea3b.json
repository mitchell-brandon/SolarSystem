{"ast":null,"code":"import class_attributes from\"../class_attributes.json\";import\"../css/planets.css\";import PlanetMetrics from\"./PlanetMetrics\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Planets(props){var radioValue=props.radioValue;// BEING PASSED FROM GREAT GRANDPARENT, App.JS\nvar planets=props.planets;// BEING PASSED FROM GRANDPARENT, ComponentRender.JS\n//THIS FUNCTION CONDITIONALLY RENDERS CLASS NAMES.\nvar classSuffix='';var flexedPlanetContainer='';function suffix(){if(radioValue==='diameters'){classSuffix=class_attributes[1].suffix;}else if(radioValue==='distances'){classSuffix=class_attributes[2].suffix;flexedPlanetContainer='flexed-planet-container';}else if(radioValue==='temperatures'){classSuffix=class_attributes[3].suffix;flexedPlanetContainer='flexed-planet-container';}else if(radioValue==='days'){classSuffix=class_attributes[4].suffix;flexedPlanetContainer='flexed-planet-container';}else if(radioValue==='years'){classSuffix=class_attributes[5].suffix;flexedPlanetContainer='flexed-planet-container';}else if(radioValue==='moons'){classSuffix=class_attributes[6].suffix;}else{classSuffix='';flexedPlanetContainer='';}}suffix();// RENDERS ALL PLANETS, INLUDES UNIQUE RENDERING FOR SATURN\nfunction renderPlanets(planet){return planet.value===\"saturn\"?/*#__PURE__*/_jsx(\"div\",{className:\"planet \".concat(planet.value,\" \").concat(planet.value+classSuffix),children:/*#__PURE__*/_jsx(\"div\",{className:\"saturn-ring\"})}):/*#__PURE__*/_jsx(\"div\",{className:radioValue==='masses'?\"planet \".concat(planet.value):\"planet \".concat(planet.value,\" \").concat(planet.value+classSuffix)});}return/*#__PURE__*/_jsx(\"div\",{className:radioValue==='moons'?\"moon-planets-container\":\"planets-container\",children:planets.map(function(planet){return/*#__PURE__*/_jsxs(\"div\",{className:\"planet-container \".concat(planet.value+classSuffix+\"-container\",\"\\n          \").concat(flexedPlanetContainer),children:[/*#__PURE__*/_jsx(\"div\",{className:\"planet-wrapper\",children:renderPlanets(planet)}),/*#__PURE__*/_jsx(PlanetMetrics,{planet:planet,radioValue:radioValue})]},planet.id);})});}export default Planets;","map":{"version":3,"sources":["/Users/mitchellbrandon/Desktop/solar-system-react/src/components/Planets.js"],"names":["class_attributes","PlanetMetrics","Planets","props","radioValue","planets","classSuffix","flexedPlanetContainer","suffix","renderPlanets","planet","value","map","id"],"mappings":"AAEA,MAAOA,CAAAA,gBAAP,KAA6B,0BAA7B,CACA,MAAO,oBAAP,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,C,wFAEA,QAASC,CAAAA,OAAT,CAAiBC,KAAjB,CAAwB,CACtB,GAAIC,CAAAA,UAAU,CAAGD,KAAK,CAACC,UAAvB,CAAmC;AACnC,GAAMC,CAAAA,OAAO,CAAGF,KAAK,CAACE,OAAtB,CAA+B;AAG/B;AACA,GAAIC,CAAAA,WAAW,CAAE,EAAjB,CACA,GAAIC,CAAAA,qBAAqB,CAAG,EAA5B,CACA,QAASC,CAAAA,MAAT,EAAiB,CACb,GAAGJ,UAAU,GAAK,WAAlB,CAA+B,CAC7BE,WAAW,CAAGN,gBAAgB,CAAC,CAAD,CAAhB,CAAoBQ,MAAlC,CACD,CAFD,IAEO,IAAIJ,UAAU,GAAI,WAAlB,CAA8B,CACnCE,WAAW,CAAGN,gBAAgB,CAAC,CAAD,CAAhB,CAAoBQ,MAAlC,CACAD,qBAAqB,CAAE,yBAAvB,CACD,CAHM,IAGA,IAAIH,UAAU,GAAI,cAAlB,CAAiC,CACtCE,WAAW,CAAGN,gBAAgB,CAAC,CAAD,CAAhB,CAAoBQ,MAAlC,CACAD,qBAAqB,CAAE,yBAAvB,CACD,CAHM,IAGA,IAAIH,UAAU,GAAI,MAAlB,CAAyB,CAC9BE,WAAW,CAAGN,gBAAgB,CAAC,CAAD,CAAhB,CAAoBQ,MAAlC,CACAD,qBAAqB,CAAE,yBAAvB,CACD,CAHM,IAGA,IAAIH,UAAU,GAAI,OAAlB,CAA0B,CAC/BE,WAAW,CAAGN,gBAAgB,CAAC,CAAD,CAAhB,CAAoBQ,MAAlC,CACAD,qBAAqB,CAAE,yBAAvB,CACD,CAHM,IAGA,IAAIH,UAAU,GAAI,OAAlB,CAA0B,CAC/BE,WAAW,CAAGN,gBAAgB,CAAC,CAAD,CAAhB,CAAoBQ,MAAlC,CACD,CAFM,IAEA,CACLF,WAAW,CAAG,EAAd,CACAC,qBAAqB,CAAE,EAAvB,CACD,CACF,CACHC,MAAM,GAEN;AACA,QAASC,CAAAA,aAAT,CAAuBC,MAAvB,CAA+B,CAC7B,MAAOA,CAAAA,MAAM,CAACC,KAAP,GAAiB,QAAjB,cACL,YAAK,SAAS,kBAAYD,MAAM,CAACC,KAAnB,aAA4BD,MAAM,CAACC,KAAP,CAAeL,WAA3C,CAAd,uBACE,YAAK,SAAS,CAAC,aAAf,EADF,EADK,cAKL,YACE,SAAS,CACPF,UAAU,GAAK,QAAf,kBACUM,MAAM,CAACC,KADjB,mBAGUD,MAAM,CAACC,KAHjB,aAG0BD,MAAM,CAACC,KAAP,CAAeL,WAHzC,CAFJ,EALF,CAcD,CAGD,mBACE,YAAK,SAAS,CAAEF,UAAU,GAAK,OAAf,CAAwB,wBAAxB,CAAmD,mBAAnE,UAEIC,OAAO,CAACO,GAAR,CAAY,SAACF,MAAD,qBACV,aAAK,SAAS,4BAAsBA,MAAM,CAACC,KAAP,CAAeL,WAAf,CAA6B,YAAnD,wBACZC,qBADY,CAAd,wBAGE,YAAK,SAAS,CAAC,gBAAf,UAAiCE,aAAa,CAACC,MAAD,CAA9C,EAHF,cAIE,KAAC,aAAD,EAAe,MAAM,CAAEA,MAAvB,CAA+B,UAAU,CAAEN,UAA3C,EAJF,GACgCM,MAAM,CAACG,EADvC,CADU,EAAZ,CAFJ,EADF,CAeD,CAED,cAAeX,CAAAA,OAAf","sourcesContent":["\n\nimport class_attributes from \"../class_attributes.json\";\nimport \"../css/planets.css\";\nimport PlanetMetrics from \"./PlanetMetrics\";\n\nfunction Planets(props) {\n  let radioValue = props.radioValue; // BEING PASSED FROM GREAT GRANDPARENT, App.JS\n  const planets = props.planets; // BEING PASSED FROM GRANDPARENT, ComponentRender.JS\n  \n\n  //THIS FUNCTION CONDITIONALLY RENDERS CLASS NAMES.\n  let classSuffix ='';\n  let flexedPlanetContainer = '';\n  function suffix(){\n      if(radioValue === 'diameters') { \n        classSuffix = class_attributes[1].suffix;\n      } else if (radioValue ==='distances'){\n        classSuffix = class_attributes[2].suffix;\n        flexedPlanetContainer ='flexed-planet-container';\n      } else if (radioValue ==='temperatures'){\n        classSuffix = class_attributes[3].suffix\n        flexedPlanetContainer ='flexed-planet-container';\n      } else if (radioValue ==='days'){\n        classSuffix = class_attributes[4].suffix\n        flexedPlanetContainer ='flexed-planet-container';\n      } else if (radioValue ==='years'){\n        classSuffix = class_attributes[5].suffix\n        flexedPlanetContainer ='flexed-planet-container';\n      } else if (radioValue ==='moons'){\n        classSuffix = class_attributes[6].suffix;\n      } else {\n        classSuffix = '';\n        flexedPlanetContainer ='';\n      }\n    }\n  suffix()\n\n  // RENDERS ALL PLANETS, INLUDES UNIQUE RENDERING FOR SATURN\n  function renderPlanets(planet) {\n    return planet.value === \"saturn\" ? (\n      <div className={`planet ${planet.value} ${planet.value + classSuffix}`}>\n        <div className=\"saturn-ring\"></div>\n      </div>\n    ) : (\n      <div\n        className={\n          radioValue === 'masses'?\n          `planet ${planet.value}`\n          :\n          `planet ${planet.value} ${planet.value + classSuffix}`\n        }\n      ></div>\n    )\n  }\n  \n\n  return (\n    <div className={radioValue === 'moons'? \"moon-planets-container\" : \"planets-container\"}>\n      {\n        planets.map((planet) => (\n          <div className={`planet-container ${planet.value + classSuffix + \"-container\"}\n          ${flexedPlanetContainer}`} key={planet.id}>\n            \n            <div className=\"planet-wrapper\">{renderPlanets(planet)}</div>\n            <PlanetMetrics planet={planet} radioValue={radioValue}/>\n      \n          </div>\n        )) \n      }\n    </div>\n  )\n}\n\nexport default Planets;\n"]},"metadata":{},"sourceType":"module"}