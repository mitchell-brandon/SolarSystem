{"ast":null,"code":"import _slicedToArray from\"/Users/mitchellbrandon/Desktop/solar-system-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import\"../css/base.css\";import Burger from\"./Burger\";import Navigation from\"./Navigation\";import ComponentRender from\"./ComponentRender\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var defaultRadioValue=window.localStorage.getItem('radioValue');if(!defaultRadioValue){defaultRadioValue='masses';}//STATE\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),isMenuVisible=_useState2[0],setisMenuVisible=_useState2[1];var _useState3=useState(defaultRadioValue),_useState4=_slicedToArray(_useState3,2),radioValue=_useState4[0],setRadioValue=_useState4[1];//TOGGLES MOBILE SCREEN MENU OVERLAY\nfunction burgerOnClick(){setisMenuVisible(!isMenuVisible);}// GRABS THE VALUE OF THE CURRENT CHECKED RADIO BUTTON\nfunction onRadioChange(element){setRadioValue(element.target.value);}useEffect(function(){window.localStorage.setItem('radioValue',radioValue);},[radioValue]);return/*#__PURE__*/_jsxs(\"div\",{className:\"body-content\",children:[/*#__PURE__*/_jsx(Burger,{onClick:burgerOnClick}),/*#__PURE__*/_jsx(Navigation,{burger:isMenuVisible,onClick:burgerOnClick,onChange:onRadioChange,radioValue:radioValue,defaultRadioValue:defaultRadioValue}),/*#__PURE__*/_jsx(ComponentRender,{radioValue:radioValue})]});}export default App;","map":{"version":3,"sources":["/Users/mitchellbrandon/Desktop/solar-system-react/src/components/App.js"],"names":["React","useState","useEffect","Burger","Navigation","ComponentRender","App","defaultRadioValue","window","localStorage","getItem","isMenuVisible","setisMenuVisible","radioValue","setRadioValue","burgerOnClick","onRadioChange","element","target","value","setItem"],"mappings":"uIAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAO,iBAAP,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,C,wFAEA,QAASC,CAAAA,GAAT,EAAe,CACb,GAAIC,CAAAA,iBAAiB,CAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,YAA5B,CAAxB,CACA,GAAI,CAACH,iBAAL,CAAwB,CACtBA,iBAAiB,CAAG,QAApB,CACD,CACD;AACA,cAA0CN,QAAQ,CAAC,KAAD,CAAlD,wCAAOU,aAAP,eAAsBC,gBAAtB,eACA,eAAoCX,QAAQ,CAACM,iBAAD,CAA5C,yCAAOM,UAAP,eAAmBC,aAAnB,eAEA;AACA,QAASC,CAAAA,aAAT,EAAyB,CACvBH,gBAAgB,CAAC,CAACD,aAAF,CAAhB,CACD,CAED;AACA,QAASK,CAAAA,aAAT,CAAuBC,OAAvB,CAAgC,CAC9BH,aAAa,CAACG,OAAO,CAACC,MAAR,CAAeC,KAAhB,CAAb,CACD,CAGDjB,SAAS,CAAC,UAAM,CACdM,MAAM,CAACC,YAAP,CAAoBW,OAApB,CAA4B,YAA5B,CAA0CP,UAA1C,EACD,CAFQ,CAEP,CAACA,UAAD,CAFO,CAAT,CAIA,mBACE,aAAK,SAAS,CAAC,cAAf,wBACE,KAAC,MAAD,EAAQ,OAAO,CAAEE,aAAjB,EADF,cAEE,KAAC,UAAD,EACE,MAAM,CAAEJ,aADV,CAEE,OAAO,CAAEI,aAFX,CAGE,QAAQ,CAAEC,aAHZ,CAIE,UAAU,CAAGH,UAJf,CAKE,iBAAiB,CAAEN,iBALrB,EAFF,cASE,KAAC,eAAD,EAAiB,UAAU,CAAEM,UAA7B,EATF,GADF,CAaD,CAED,cAAeP,CAAAA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../css/base.css\";\nimport Burger from \"./Burger\";\nimport Navigation from \"./Navigation\";\nimport ComponentRender from \"./ComponentRender\";\n\nfunction App() {\n  let defaultRadioValue = window.localStorage.getItem('radioValue');\n  if (!defaultRadioValue) {\n    defaultRadioValue = 'masses';\n  }\n  //STATE\n  const [isMenuVisible, setisMenuVisible] = useState(false);\n  const [radioValue, setRadioValue] = useState(defaultRadioValue);\n\n  //TOGGLES MOBILE SCREEN MENU OVERLAY\n  function burgerOnClick() { \n    setisMenuVisible(!isMenuVisible)\n  }\n\n  // GRABS THE VALUE OF THE CURRENT CHECKED RADIO BUTTON\n  function onRadioChange(element) {\n    setRadioValue(element.target.value)\n  }\n\n\n  useEffect(() => {\n    window.localStorage.setItem('radioValue', radioValue);\n  },[radioValue]);\n\n  return (\n    <div className=\"body-content\">\n      <Burger onClick={burgerOnClick} />\n      <Navigation\n        burger={isMenuVisible}\n        onClick={burgerOnClick}\n        onChange={onRadioChange}\n        radioValue ={radioValue}\n        defaultRadioValue={defaultRadioValue}\n      />\n      <ComponentRender radioValue={radioValue}/>\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}