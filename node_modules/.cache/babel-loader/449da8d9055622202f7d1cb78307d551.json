{"ast":null,"code":"import class_attributes from\"../class_attributes.json\";import\"../css/navigation.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Navigation(props){var radioValue=props.radioValue;function onXClick(){props.onClick();}function onRadioChange(element){props.onChange(element);}function metricSubheaders(){var subHeaders='';if(radioValue==='masses'){subHeaders=[/*#__PURE__*/_jsx(\"h3\",{className:\"header\",children:\"Planetary Masses\"}),/*#__PURE__*/_jsx(\"p\",{className:\"header\",children:\" In Kilograms (10^24kg)\"})];}else if(radioValue==='diameters'){subHeaders=[/*#__PURE__*/_jsx(\"h3\",{className:\"header\",children:\"Planetary Diameters\"}),/*#__PURE__*/_jsx(\"p\",{className:\"header\",children:\" In Kilometers\"})];}else if(radioValue==='distances'){subHeaders=[/*#__PURE__*/_jsx(\"h3\",{className:\"header\",children:\"Distances from Sun\"}),/*#__PURE__*/_jsx(\"p\",{className:\"header\",children:\" In AU (1=93,000,000mi) \"})];}else if(radioValue==='temperatures'){subHeaders=[/*#__PURE__*/_jsx(\"h3\",{className:\"header\",children:\"Average Surface Tempratures\"}),/*#__PURE__*/_jsx(\"p\",{className:\"header\",children:\" In Celsius\"})];}else if(radioValue==='days'){subHeaders=[/*#__PURE__*/_jsx(\"h3\",{className:\"header\",children:\"Rotational Period\"}),/*#__PURE__*/_jsx(\"p\",{className:\"header\",children:\" Days in Earth hours\"})];}else if(radioValue==='years'){subHeaders=[/*#__PURE__*/_jsx(\"h3\",{className:\"header\",children:\"Orbital Period\"}),/*#__PURE__*/_jsx(\"p\",{className:\"header\",children:\" A Year in Earth Days\"})];}else if(radioValue==='moons'){subHeaders=/*#__PURE__*/_jsx(\"h3\",{className:\"header\",children:\"Number of Moons\"});}else{subHeaders='';}return subHeaders;}return/*#__PURE__*/_jsxs(\"div\",{className:\"menu-container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"header\",children:\"Solar System\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"menu-wrapper \".concat(props.burger?null:\"display-none\"),children:[/*#__PURE__*/_jsx(\"button\",{className:\"menu-close-x\",onClick:onXClick}),/*#__PURE__*/_jsx(\"ul\",{className:\"menu\",children:class_attributes.map(function(attribute){return/*#__PURE__*/_jsxs(\"li\",{onChange:onRadioChange,children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",id:attribute.value,name:\"radio\",value:attribute.value,defaultChecked:props.defaultRadioValue===attribute.value,onClick:props.burger?onXClick:null}),/*#__PURE__*/_jsx(\"label\",{htmlFor:attribute.value,className:\"menu-link\",children:attribute.nav_link})]},attribute.value+1);})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"subheader-wrapper\",children:metricSubheaders()})]});}export default Navigation;","map":{"version":3,"sources":["/Users/mitchellbrandon/Desktop/solar-system-react/src/components/Navigation.js"],"names":["class_attributes","Navigation","props","radioValue","onXClick","onClick","onRadioChange","element","onChange","metricSubheaders","subHeaders","burger","map","attribute","value","defaultRadioValue","nav_link"],"mappings":"AAAA,MAAOA,CAAAA,gBAAP,KAA6B,0BAA7B,CACA,MAAO,uBAAP,C,wFAEA,QAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA2B,CACzB,GAAIC,CAAAA,UAAU,CAAGD,KAAK,CAACC,UAAvB,CAEA,QAASC,CAAAA,QAAT,EAAoB,CAClBF,KAAK,CAACG,OAAN,GACD,CAGD,QAASC,CAAAA,aAAT,CAAuBC,OAAvB,CAAgC,CAC9BL,KAAK,CAACM,QAAN,CAAeD,OAAf,EACD,CAED,QAASE,CAAAA,gBAAT,EAA2B,CACzB,GAAIC,CAAAA,UAAU,CAAG,EAAjB,CACA,GAAGP,UAAU,GAAK,QAAlB,CAA2B,CACzBO,UAAU,CAAG,cACb,WAAI,SAAS,CAAC,QAAd,8BADa,cAEb,UAAG,SAAS,CAAC,QAAb,qCAFa,CAAb,CAID,CALD,IAKO,IAAIP,UAAU,GAAK,WAAnB,CAA+B,CACpCO,UAAU,CAAE,cACZ,WAAI,SAAS,CAAC,QAAd,iCADY,cAEZ,UAAG,SAAS,CAAC,QAAb,4BAFY,CAAZ,CAKD,CANM,IAMA,IAAIP,UAAU,GAAK,WAAnB,CAA+B,CACpCO,UAAU,CAAE,cACZ,WAAI,SAAS,CAAC,QAAd,gCADY,cAEZ,UAAG,SAAS,CAAC,QAAb,sCAFY,CAAZ,CAID,CALM,IAKA,IAAIP,UAAU,GAAK,cAAnB,CAAkC,CACvCO,UAAU,CAAE,cACZ,WAAI,SAAS,CAAC,QAAd,yCADY,cAEZ,UAAG,SAAS,CAAC,QAAb,yBAFY,CAAZ,CAID,CALM,IAKA,IAAIP,UAAU,GAAK,MAAnB,CAA0B,CAC/BO,UAAU,CAAE,cACZ,WAAI,SAAS,CAAC,QAAd,+BADY,cAEZ,UAAG,SAAS,CAAC,QAAb,kCAFY,CAAZ,CAID,CALM,IAKA,IAAIP,UAAU,GAAK,OAAnB,CAA2B,CAChCO,UAAU,CAAE,cACZ,WAAI,SAAS,CAAC,QAAd,4BADY,cAEZ,UAAG,SAAS,CAAC,QAAb,mCAFY,CAAZ,CAID,CALM,IAKA,IAAIP,UAAU,GAAK,OAAnB,CAA2B,CAChCO,UAAU,cACV,WAAI,SAAS,CAAC,QAAd,6BADA,CAED,CAHM,IAGA,CACLA,UAAU,CAAG,EAAb,CACD,CAED,MAAOA,CAAAA,UAAP,CACD,CAGD,mBACE,aAAK,SAAS,CAAC,gBAAf,wBAEE,WAAI,SAAS,CAAC,QAAd,0BAFF,cAGE,aAAK,SAAS,wBAAkBR,KAAK,CAACS,MAAN,CAAe,IAAf,CAAsB,cAAxC,CAAd,wBACE,eAAQ,SAAS,CAAC,cAAlB,CAAiC,OAAO,CAAEP,QAA1C,EADF,cAGE,WAAI,SAAS,CAAC,MAAd,UAGGJ,gBAAgB,CAACY,GAAjB,CAAqB,SAACC,SAAD,qBACpB,YAA8B,QAAQ,CAAEP,aAAxC,wBACE,cACE,IAAI,CAAC,OADP,CAEE,EAAE,CAAEO,SAAS,CAACC,KAFhB,CAGE,IAAI,CAAC,OAHP,CAIE,KAAK,CAAED,SAAS,CAACC,KAJnB,CAKE,cAAc,CAAEZ,KAAK,CAACa,iBAAN,GAA4BF,SAAS,CAACC,KALxD,CAME,OAAO,CAAEZ,KAAK,CAACS,MAAN,CAAcP,QAAd,CAAyB,IANpC,EADF,cASE,cAAO,OAAO,CAAES,SAAS,CAACC,KAA1B,CAAiC,SAAS,CAAC,WAA3C,UACGD,SAAS,CAACG,QADb,EATF,GAASH,SAAS,CAACC,KAAV,CAAkB,CAA3B,CADoB,EAArB,CAHH,EAHF,GAHF,cA4BE,YAAK,SAAS,CAAC,mBAAf,UACGL,gBAAgB,EADnB,EA5BF,GADF,CAkCD,CAED,cAAeR,CAAAA,UAAf","sourcesContent":["import class_attributes from \"../class_attributes.json\";\nimport \"../css/navigation.css\";\n\nfunction Navigation(props) {\n  let radioValue = props.radioValue\n\n  function onXClick() {\n    props.onClick()\n  }\n\n\n  function onRadioChange(element) {\n    props.onChange(element)\n  }\n\n  function metricSubheaders(){\n    let subHeaders = ''\n    if(radioValue === 'masses'){\n      subHeaders = [\n      <h3 className=\"header\">Planetary Masses</h3>,\n      <p className=\"header\"> In Kilograms (10^24kg)</p>\n      ]\n    } else if (radioValue === 'diameters'){\n      subHeaders =[ \n      <h3 className=\"header\">Planetary Diameters</h3>,\n      <p className=\"header\"> In Kilometers</p>\n      ]\n      \n    } else if (radioValue === 'distances'){\n      subHeaders =[ \n      <h3 className=\"header\">Distances from Sun</h3>,\n      <p className=\"header\"> In AU (1=93,000,000mi) </p>\n      ]\n    } else if (radioValue === 'temperatures'){\n      subHeaders =[\n      <h3 className=\"header\">Average Surface Tempratures</h3>,\n      <p className=\"header\"> In Celsius</p>\n      ]\n    } else if (radioValue === 'days'){\n      subHeaders =[ \n      <h3 className=\"header\">Rotational Period</h3>,\n      <p className=\"header\"> Days in Earth hours</p>\n      ]\n    } else if (radioValue === 'years'){\n      subHeaders =[ \n      <h3 className=\"header\">Orbital Period</h3>,\n      <p className=\"header\"> A Year in Earth Days</p>\n      ]\n    } else if (radioValue === 'moons'){\n      subHeaders = \n      <h3 className=\"header\">Number of Moons</h3>\n    } else {\n      subHeaders = ''\n    }\n\n    return subHeaders\n  }\n\n  \n  return (\n    <div className=\"menu-container\">\n      {/* MENU HEADERS */}\n      <h1 className=\"header\">Solar System</h1>\n      <div className={`menu-wrapper ${props.burger ? null : \"display-none\"}`}>\n        <button className=\"menu-close-x\" onClick={onXClick}></button>\n\n        <ul className=\"menu\">\n\n          {/* MENU LIST ITEMS TEMPLATED */}\n          {class_attributes.map((attribute) => (\n            <li key={attribute.value + 1} onChange={onRadioChange}>\n              <input\n                type=\"radio\"\n                id={attribute.value}\n                name=\"radio\"\n                value={attribute.value}\n                defaultChecked={props.defaultRadioValue === attribute.value}\n                onClick={props.burger? onXClick : null}\n              />\n              <label htmlFor={attribute.value} className=\"menu-link\">\n                {attribute.nav_link}\n              </label>\n            </li>\n          ))}\n          \n        </ul>\n\n      </div>\n      <div className=\"subheader-wrapper\">\n        {metricSubheaders()}\n      </div>\n    </div>\n  )\n}\n\nexport default Navigation;\n"]},"metadata":{},"sourceType":"module"}